hlsl.hull.1.tesc
Shader version: 500
vertices = 4
vertex spacing = equal_spacing
0:? Sequence
0:26  Function Definition: @main(struct-VS_OUT-vf31[4];u1; ( temp structure{ temp 3-component vector of float cpoint})
0:26    Function Parameters: 
0:26      'ip' ( in 4-element array of structure{ temp 3-component vector of float cpoint})
0:26      'm_cpid' ( in uint)
0:?     Sequence
0:28      move second child to first child ( temp 3-component vector of float)
0:28        cpoint: direct index for structure ( temp 3-component vector of float)
0:28          'output' ( temp structure{ temp 3-component vector of float cpoint})
0:28          Constant:
0:28            0 (const int)
0:28        cpoint: direct index for structure ( temp 3-component vector of float)
0:28          direct index ( temp structure{ temp 3-component vector of float cpoint})
0:28            'ip' ( in 4-element array of structure{ temp 3-component vector of float cpoint})
0:28            Constant:
0:28              0 (const int)
0:28          Constant:
0:28            0 (const int)
0:29      Branch: Return with expression
0:29        'output' ( temp structure{ temp 3-component vector of float cpoint})
0:26  Function Definition: main( ( temp void)
0:26    Function Parameters: 
0:?     Sequence
0:26      Sequence
0:26        move second child to first child ( temp 3-component vector of float)
0:26          cpoint: direct index for structure ( temp 3-component vector of float)
0:26            direct index ( temp structure{ temp 3-component vector of float cpoint})
0:?               'ip' ( temp 4-element array of structure{ temp 3-component vector of float cpoint})
0:26              Constant:
0:26                0 (const int)
0:26            Constant:
0:26              0 (const int)
0:?           'ip[0].cpoint' (layout( location=0) in 3-component vector of float)
0:26        move second child to first child ( temp 3-component vector of float)
0:26          cpoint: direct index for structure ( temp 3-component vector of float)
0:26            direct index ( temp structure{ temp 3-component vector of float cpoint})
0:?               'ip' ( temp 4-element array of structure{ temp 3-component vector of float cpoint})
0:26              Constant:
0:26                1 (const int)
0:26            Constant:
0:26              0 (const int)
0:?           'ip[1].cpoint' (layout( location=1) in 3-component vector of float)
0:26        move second child to first child ( temp 3-component vector of float)
0:26          cpoint: direct index for structure ( temp 3-component vector of float)
0:26            direct index ( temp structure{ temp 3-component vector of float cpoint})
0:?               'ip' ( temp 4-element array of structure{ temp 3-component vector of float cpoint})
0:26              Constant:
0:26                2 (const int)
0:26            Constant:
0:26              0 (const int)
0:?           'ip[2].cpoint' (layout( location=2) in 3-component vector of float)
0:26        move second child to first child ( temp 3-component vector of float)
0:26          cpoint: direct index for structure ( temp 3-component vector of float)
0:26            direct index ( temp structure{ temp 3-component vector of float cpoint})
0:?               'ip' ( temp 4-element array of structure{ temp 3-component vector of float cpoint})
0:26              Constant:
0:26                3 (const int)
0:26            Constant:
0:26              0 (const int)
0:?           'ip[3].cpoint' (layout( location=3) in 3-component vector of float)
0:26      move second child to first child ( temp uint)
0:?         'm_cpid' ( temp uint)
0:?         'm_cpid' ( in uint InvocationID)
0:26      move second child to first child ( temp structure{ temp 3-component vector of float cpoint})
0:26        indirect index ( temp structure{ temp 3-component vector of float cpoint})
0:?           '@entryPointOutput' ( out 4-element array of structure{ temp 3-component vector of float cpoint})
0:?           'm_cpid' ( in uint InvocationID)
0:26        Function Call: @main(struct-VS_OUT-vf31[4];u1; ( temp structure{ temp 3-component vector of float cpoint})
0:?           'ip' ( temp 4-element array of structure{ temp 3-component vector of float cpoint})
0:?           'm_cpid' ( temp uint)
0:?       Barrier ( temp void)
0:?       Test condition and select ( temp void)
0:?         Condition
0:?         Compare Equal ( temp bool)
0:?           'm_cpid' ( in uint InvocationID)
0:?           Constant:
0:?             0 (const int)
0:?         true case
0:?         Sequence
0:?           move second child to first child ( temp structure{ temp 2-element array of float edges})
0:?             '@patchConstantResult' ( temp structure{ temp 2-element array of float edges})
0:?             Function Call: PCF(u1; ( temp structure{ temp 2-element array of float edges})
0:?               'pid' ( in uint PrimitiveID)
0:?           Sequence
0:?             move second child to first child ( temp float)
0:?               'edges[0]' ( patch out float TessLevelOuter)
0:?               direct index ( temp float)
0:?                 edges: direct index for structure ( temp 2-element array of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 2-element array of float edges})
0:?                   Constant:
0:?                     0 (const int)
0:?                 Constant:
0:?                   0 (const int)
0:?             move second child to first child ( temp float)
0:?               'edges[1]' ( patch out float TessLevelOuter)
0:?               direct index ( temp float)
0:?                 edges: direct index for structure ( temp 2-element array of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 2-element array of float edges})
0:?                   Constant:
0:?                     0 (const int)
0:?                 Constant:
0:?                   1 (const int)
0:33  Function Definition: PCF(u1; ( temp structure{ temp 2-element array of float edges})
0:33    Function Parameters: 
0:33      'pid' ( in uint)
0:?     Sequence
0:36      move second child to first child ( temp float)
0:36        direct index ( temp float)
0:36          edges: direct index for structure ( temp 2-element array of float)
0:36            'output' ( temp structure{ temp 2-element array of float edges})
0:36            Constant:
0:36              0 (const int)
0:36          Constant:
0:36            0 (const int)
0:36        Constant:
0:36          2.000000
0:37      move second child to first child ( temp float)
0:37        direct index ( temp float)
0:37          edges: direct index for structure ( temp 2-element array of float)
0:37            'output' ( temp structure{ temp 2-element array of float edges})
0:37            Constant:
0:37              0 (const int)
0:37          Constant:
0:37            1 (const int)
0:37        Constant:
0:37          8.000000
0:38      Branch: Return with expression
0:38        'output' ( temp structure{ temp 2-element array of float edges})
0:?   Linker Objects
0:?     '@entryPointOutput[0].cpoint' (layout( location=0) out 3-component vector of float)
0:?     '@entryPointOutput[1].cpoint' (layout( location=1) out 3-component vector of float)
0:?     '@entryPointOutput[2].cpoint' (layout( location=2) out 3-component vector of float)
0:?     '@entryPointOutput[3].cpoint' (layout( location=3) out 3-component vector of float)
0:?     'ip[0].cpoint' (layout( location=0) in 3-component vector of float)
0:?     'ip[1].cpoint' (layout( location=1) in 3-component vector of float)
0:?     'ip[2].cpoint' (layout( location=2) in 3-component vector of float)
0:?     'ip[3].cpoint' (layout( location=3) in 3-component vector of float)
0:?     'm_cpid' ( in uint InvocationID)
0:?     'pid' ( in uint PrimitiveID)
0:?     'edges[0]' ( patch out float TessLevelOuter)
0:?     'edges[1]' ( patch out float TessLevelOuter)
0:?     'edges[0]' ( patch out float TessLevelOuter)
0:?     'edges[1]' ( patch out float TessLevelOuter)


Linked tessellation control stage:


Shader version: 500
vertices = 4
vertex spacing = equal_spacing
0:? Sequence
0:26  Function Definition: @main(struct-VS_OUT-vf31[4];u1; ( temp structure{ temp 3-component vector of float cpoint})
0:26    Function Parameters: 
0:26      'ip' ( in 4-element array of structure{ temp 3-component vector of float cpoint})
0:26      'm_cpid' ( in uint)
0:?     Sequence
0:28      move second child to first child ( temp 3-component vector of float)
0:28        cpoint: direct index for structure ( temp 3-component vector of float)
0:28          'output' ( temp structure{ temp 3-component vector of float cpoint})
0:28          Constant:
0:28            0 (const int)
0:28        cpoint: direct index for structure ( temp 3-component vector of float)
0:28          direct index ( temp structure{ temp 3-component vector of float cpoint})
0:28            'ip' ( in 4-element array of structure{ temp 3-component vector of float cpoint})
0:28            Constant:
0:28              0 (const int)
0:28          Constant:
0:28            0 (const int)
0:29      Branch: Return with expression
0:29        'output' ( temp structure{ temp 3-component vector of float cpoint})
0:26  Function Definition: main( ( temp void)
0:26    Function Parameters: 
0:?     Sequence
0:26      Sequence
0:26        move second child to first child ( temp 3-component vector of float)
0:26          cpoint: direct index for structure ( temp 3-component vector of float)
0:26            direct index ( temp structure{ temp 3-component vector of float cpoint})
0:?               'ip' ( temp 4-element array of structure{ temp 3-component vector of float cpoint})
0:26              Constant:
0:26                0 (const int)
0:26            Constant:
0:26              0 (const int)
0:?           'ip[0].cpoint' (layout( location=0) in 3-component vector of float)
0:26        move second child to first child ( temp 3-component vector of float)
0:26          cpoint: direct index for structure ( temp 3-component vector of float)
0:26            direct index ( temp structure{ temp 3-component vector of float cpoint})
0:?               'ip' ( temp 4-element array of structure{ temp 3-component vector of float cpoint})
0:26              Constant:
0:26                1 (const int)
0:26            Constant:
0:26              0 (const int)
0:?           'ip[1].cpoint' (layout( location=1) in 3-component vector of float)
0:26        move second child to first child ( temp 3-component vector of float)
0:26          cpoint: direct index for structure ( temp 3-component vector of float)
0:26            direct index ( temp structure{ temp 3-component vector of float cpoint})
0:?               'ip' ( temp 4-element array of structure{ temp 3-component vector of float cpoint})
0:26              Constant:
0:26                2 (const int)
0:26            Constant:
0:26              0 (const int)
0:?           'ip[2].cpoint' (layout( location=2) in 3-component vector of float)
0:26        move second child to first child ( temp 3-component vector of float)
0:26          cpoint: direct index for structure ( temp 3-component vector of float)
0:26            direct index ( temp structure{ temp 3-component vector of float cpoint})
0:?               'ip' ( temp 4-element array of structure{ temp 3-component vector of float cpoint})
0:26              Constant:
0:26                3 (const int)
0:26            Constant:
0:26              0 (const int)
0:?           'ip[3].cpoint' (layout( location=3) in 3-component vector of float)
0:26      move second child to first child ( temp uint)
0:?         'm_cpid' ( temp uint)
0:?         'm_cpid' ( in uint InvocationID)
0:26      move second child to first child ( temp structure{ temp 3-component vector of float cpoint})
0:26        indirect index ( temp structure{ temp 3-component vector of float cpoint})
0:?           '@entryPointOutput' ( out 4-element array of structure{ temp 3-component vector of float cpoint})
0:?           'm_cpid' ( in uint InvocationID)
0:26        Function Call: @main(struct-VS_OUT-vf31[4];u1; ( temp structure{ temp 3-component vector of float cpoint})
0:?           'ip' ( temp 4-element array of structure{ temp 3-component vector of float cpoint})
0:?           'm_cpid' ( temp uint)
0:?       Barrier ( temp void)
0:?       Test condition and select ( temp void)
0:?         Condition
0:?         Compare Equal ( temp bool)
0:?           'm_cpid' ( in uint InvocationID)
0:?           Constant:
0:?             0 (const int)
0:?         true case
0:?         Sequence
0:?           move second child to first child ( temp structure{ temp 2-element array of float edges})
0:?             '@patchConstantResult' ( temp structure{ temp 2-element array of float edges})
0:?             Function Call: PCF(u1; ( temp structure{ temp 2-element array of float edges})
0:?               'pid' ( in uint PrimitiveID)
0:?           Sequence
0:?             move second child to first child ( temp float)
0:?               'edges[0]' ( patch out float TessLevelOuter)
0:?               direct index ( temp float)
0:?                 edges: direct index for structure ( temp 2-element array of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 2-element array of float edges})
0:?                   Constant:
0:?                     0 (const int)
0:?                 Constant:
0:?                   0 (const int)
0:?             move second child to first child ( temp float)
0:?               'edges[1]' ( patch out float TessLevelOuter)
0:?               direct index ( temp float)
0:?                 edges: direct index for structure ( temp 2-element array of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 2-element array of float edges})
0:?                   Constant:
0:?                     0 (const int)
0:?                 Constant:
0:?                   1 (const int)
0:33  Function Definition: PCF(u1; ( temp structure{ temp 2-element array of float edges})
0:33    Function Parameters: 
0:33      'pid' ( in uint)
0:?     Sequence
0:36      move second child to first child ( temp float)
0:36        direct index ( temp float)
0:36          edges: direct index for structure ( temp 2-element array of float)
0:36            'output' ( temp structure{ temp 2-element array of float edges})
0:36            Constant:
0:36              0 (const int)
0:36          Constant:
0:36            0 (const int)
0:36        Constant:
0:36          2.000000
0:37      move second child to first child ( temp float)
0:37        direct index ( temp float)
0:37          edges: direct index for structure ( temp 2-element array of float)
0:37            'output' ( temp structure{ temp 2-element array of float edges})
0:37            Constant:
0:37              0 (const int)
0:37          Constant:
0:37            1 (const int)
0:37        Constant:
0:37          8.000000
0:38      Branch: Return with expression
0:38        'output' ( temp structure{ temp 2-element array of float edges})
0:?   Linker Objects
0:?     '@entryPointOutput[0].cpoint' (layout( location=0) out 3-component vector of float)
0:?     '@entryPointOutput[1].cpoint' (layout( location=1) out 3-component vector of float)
0:?     '@entryPointOutput[2].cpoint' (layout( location=2) out 3-component vector of float)
0:?     '@entryPointOutput[3].cpoint' (layout( location=3) out 3-component vector of float)
0:?     'ip[0].cpoint' (layout( location=0) in 3-component vector of float)
0:?     'ip[1].cpoint' (layout( location=1) in 3-component vector of float)
0:?     'ip[2].cpoint' (layout( location=2) in 3-component vector of float)
0:?     'ip[3].cpoint' (layout( location=3) in 3-component vector of float)
0:?     'm_cpid' ( in uint InvocationID)
0:?     'pid' ( in uint PrimitiveID)
0:?     'edges[0]' ( patch out float TessLevelOuter)
0:?     'edges[1]' ( patch out float TessLevelOuter)
0:?     'edges[0]' ( patch out float TessLevelOuter)
0:?     'edges[1]' ( patch out float TessLevelOuter)

// Module Version 10000
// Generated by (magic number): 80001
// Id's are bound by 104

                              Capability Tessellation
               1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint TessellationControl 4  "main" 40 44 48 52 57 61 79 84 88 100 101 102 103
                              ExecutionMode 4 OutputVertices 4
                              ExecutionMode 4 Isolines
                              ExecutionMode 4 SpacingEqual
                              Source HLSL 500
                              Name 4  "main"
                              Name 8  "VS_OUT"
                              MemberName 8(VS_OUT) 0  "cpoint"
                              Name 14  "HS_OUT"
                              MemberName 14(HS_OUT) 0  "cpoint"
                              Name 18  "@main(struct-VS_OUT-vf31[4];u1;"
                              Name 16  "ip"
                              Name 17  "m_cpid"
                              Name 22  "HS_CONSTANT_OUT"
                              MemberName 22(HS_CONSTANT_OUT) 0  "edges"
                              Name 25  "PCF(u1;"
                              Name 24  "pid"
                              Name 28  "output"
                              Name 38  "ip"
                              Name 40  "ip[0].cpoint"
                              Name 44  "ip[1].cpoint"
                              Name 48  "ip[2].cpoint"
                              Name 52  "ip[3].cpoint"
                              Name 55  "m_cpid"
                              Name 57  "m_cpid"
                              Name 61  "@entryPointOutput"
                              Name 63  "param"
                              Name 65  "param"
                              Name 78  "@patchConstantResult"
                              Name 79  "pid"
                              Name 80  "param"
                              Name 84  "edges[0]"
                              Name 88  "edges[1]"
                              Name 91  "output"
                              Name 100  "@entryPointOutput[0].cpoint"
                              Name 101  "@entryPointOutput[1].cpoint"
                              Name 102  "@entryPointOutput[2].cpoint"
                              Name 103  "@entryPointOutput[3].cpoint"
                              Decorate 40(ip[0].cpoint) Location 0
                              Decorate 44(ip[1].cpoint) Location 1
                              Decorate 48(ip[2].cpoint) Location 2
                              Decorate 52(ip[3].cpoint) Location 3
                              Decorate 57(m_cpid) BuiltIn InvocationId
                              Decorate 79(pid) BuiltIn PrimitiveId
                              Decorate 84(edges[0]) Patch
                              Decorate 84(edges[0]) BuiltIn TessLevelOuter
                              Decorate 88(edges[1]) Patch
                              Decorate 88(edges[1]) BuiltIn TessLevelOuter
                              Decorate 100(@entryPointOutput[0].cpoint) Location 0
                              Decorate 101(@entryPointOutput[1].cpoint) Location 1
                              Decorate 102(@entryPointOutput[2].cpoint) Location 2
                              Decorate 103(@entryPointOutput[3].cpoint) Location 3
               2:             TypeVoid
               3:             TypeFunction 2
               6:             TypeFloat 32
               7:             TypeVector 6(float) 3
       8(VS_OUT):             TypeStruct 7(fvec3)
               9:             TypeInt 32 0
              10:      9(int) Constant 4
              11:             TypeArray 8(VS_OUT) 10
              12:             TypePointer Function 11
              13:             TypePointer Function 9(int)
      14(HS_OUT):             TypeStruct 7(fvec3)
              15:             TypeFunction 14(HS_OUT) 12(ptr) 13(ptr)
              20:      9(int) Constant 2
              21:             TypeArray 6(float) 20
22(HS_CONSTANT_OUT):             TypeStruct 21
              23:             TypeFunction 22(HS_CONSTANT_OUT) 13(ptr)
              27:             TypePointer Function 14(HS_OUT)
              29:             TypeInt 32 1
              30:     29(int) Constant 0
              31:             TypePointer Function 7(fvec3)
              39:             TypePointer Input 7(fvec3)
40(ip[0].cpoint):     39(ptr) Variable Input
              43:     29(int) Constant 1
44(ip[1].cpoint):     39(ptr) Variable Input
              47:     29(int) Constant 2
48(ip[2].cpoint):     39(ptr) Variable Input
              51:     29(int) Constant 3
52(ip[3].cpoint):     39(ptr) Variable Input
              56:             TypePointer Input 9(int)
      57(m_cpid):     56(ptr) Variable Input
              59:             TypeArray 14(HS_OUT) 10
              60:             TypePointer Output 59
61(@entryPointOutput):     60(ptr) Variable Output
              68:             TypePointer Output 14(HS_OUT)
              70:      9(int) Constant 1
              71:      9(int) Constant 0
              73:             TypeBool
              77:             TypePointer Function 22(HS_CONSTANT_OUT)
         79(pid):     56(ptr) Variable Input
              83:             TypePointer Output 6(float)
    84(edges[0]):     83(ptr) Variable Output
              85:             TypePointer Function 6(float)
    88(edges[1]):     83(ptr) Variable Output
              92:    6(float) Constant 1073741824
              94:    6(float) Constant 1090519040
              99:             TypePointer Output 7(fvec3)
100(@entryPointOutput[0].cpoint):     99(ptr) Variable Output
101(@entryPointOutput[1].cpoint):     99(ptr) Variable Output
102(@entryPointOutput[2].cpoint):     99(ptr) Variable Output
103(@entryPointOutput[3].cpoint):     99(ptr) Variable Output
         4(main):           2 Function None 3
               5:             Label
          38(ip):     12(ptr) Variable Function
      55(m_cpid):     13(ptr) Variable Function
       63(param):     12(ptr) Variable Function
       65(param):     13(ptr) Variable Function
78(@patchConstantResult):     77(ptr) Variable Function
       80(param):     13(ptr) Variable Function
              41:    7(fvec3) Load 40(ip[0].cpoint)
              42:     31(ptr) AccessChain 38(ip) 30 30
                              Store 42 41
              45:    7(fvec3) Load 44(ip[1].cpoint)
              46:     31(ptr) AccessChain 38(ip) 43 30
                              Store 46 45
              49:    7(fvec3) Load 48(ip[2].cpoint)
              50:     31(ptr) AccessChain 38(ip) 47 30
                              Store 50 49
              53:    7(fvec3) Load 52(ip[3].cpoint)
              54:     31(ptr) AccessChain 38(ip) 51 30
                              Store 54 53
              58:      9(int) Load 57(m_cpid)
                              Store 55(m_cpid) 58
              62:      9(int) Load 57(m_cpid)
              64:          11 Load 38(ip)
                              Store 63(param) 64
              66:      9(int) Load 55(m_cpid)
                              Store 65(param) 66
              67:  14(HS_OUT) FunctionCall 18(@main(struct-VS_OUT-vf31[4];u1;) 63(param) 65(param)
              69:     68(ptr) AccessChain 61(@entryPointOutput) 62
                              Store 69 67
                              ControlBarrier 20 70 71
              72:      9(int) Load 57(m_cpid)
              74:    73(bool) IEqual 72 30
                              SelectionMerge 76 None
                              BranchConditional 74 75 76
              75:               Label
              81:      9(int)   Load 79(pid)
                                Store 80(param) 81
              82:22(HS_CONSTANT_OUT)   FunctionCall 25(PCF(u1;) 80(param)
                                Store 78(@patchConstantResult) 82
              86:     85(ptr)   AccessChain 78(@patchConstantResult) 30 30
              87:    6(float)   Load 86
                                Store 84(edges[0]) 87
              89:     85(ptr)   AccessChain 78(@patchConstantResult) 30 43
              90:    6(float)   Load 89
                                Store 88(edges[1]) 90
                                Branch 76
              76:             Label
                              Return
                              FunctionEnd
18(@main(struct-VS_OUT-vf31[4];u1;):  14(HS_OUT) Function None 15
          16(ip):     12(ptr) FunctionParameter
      17(m_cpid):     13(ptr) FunctionParameter
              19:             Label
      28(output):     27(ptr) Variable Function
              32:     31(ptr) AccessChain 16(ip) 30 30
              33:    7(fvec3) Load 32
              34:     31(ptr) AccessChain 28(output) 30
                              Store 34 33
              35:  14(HS_OUT) Load 28(output)
                              ReturnValue 35
                              FunctionEnd
     25(PCF(u1;):22(HS_CONSTANT_OUT) Function None 23
         24(pid):     13(ptr) FunctionParameter
              26:             Label
      91(output):     77(ptr) Variable Function
              93:     85(ptr) AccessChain 91(output) 30 30
                              Store 93 92
              95:     85(ptr) AccessChain 91(output) 30 43
                              Store 95 94
              96:22(HS_CONSTANT_OUT) Load 91(output)
                              ReturnValue 96
                              FunctionEnd
